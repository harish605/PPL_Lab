 int main()
        {
            int a, b, c;
            b = (a + c + b) * (c + a);
            return b;
        }








^M
;; Function main (main, funcdef_no=0, decl_uid=1499, cgraph_uid=1, symbol_order=0)^M
^M
main ()^M
{^M
  int c;^M
  int b;^M
  int a;^M
  int D.1505;^M
  int _1;^M
  int _2;^M
 int _3;^M
  int _8;^M
^M
  <bb 2> :^M
  _1 = a_4(D) + c_5(D);
  _2 = b_6(D) + _1;
  _3 = c_5(D) + a_4(D);
  b_7 = _2 * _3;
  _8 = b_7;
^M
  <bb 3> :^M
<L0>:
  return _8;
^M
}^M
^M
^M



1. Twice, though the operands are in different orders. It is only computed once
   after the FRE pass.

2. We can check if there have been further optimisations by checking
   B-4.c.*.optimized, which is the final file after optimisation. It appears
   that redundant assignments have subsequently been eliminated

3. Not returning b would result in its elimination as dead code, for example in
   the case where `return b` is changed to `return 0`.